github.com/google/uuid
  import "google/protobuf/empty.proto"; 
  google.protobuf.Empty

conn, err := grpc.Dial(
		":4000",
		grpc.WithDefaultServiceConfig(`{"loadBalancingConfig": [{"round_robin":{}}]}`), // This sets the initial balancing policy.
		grpc.WithInsecure(),
	)
	if err != nil {
		log.Fatal(err)
	}
	defer conn.Close()

func ProductInterceptor(ctx context.Context, req interface{}, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (interface{}, error) {
	fmt.Println("time: ", time.Now())
	fmt.Println("method: ", info.FullMethod)
	msg, err := handler(ctx, req)
	fmt.Println("message:", msg)
	return msg, err
}
